{"version":3,"sources":["screens/Moves/style.module.css","components/AgGrid/AgGrid.tsx","components/AgGrid/AgGrid.module.css","components/Disclosure/style.module.css","../node_modules/@reach/utils/context/dist/reach-utils-context.esm.js","../node_modules/@reach/utils/compose-refs/dist/reach-utils-compose-refs.esm.js","../node_modules/@reach/utils/type-check/dist/reach-utils-type-check.esm.js","../node_modules/@reach/utils/can-use-dom/dist/reach-utils-can-use-dom.esm.js","../node_modules/@reach/utils/use-isomorphic-layout-effect/dist/reach-utils-use-isomorphic-layout-effect.esm.js","../node_modules/@reach/auto-id/dist/reach-auto-id.esm.js","../node_modules/@reach/disclosure/dist/reach-disclosure.esm.js","../node_modules/@reach/utils/make-id/dist/reach-utils-make-id.esm.js","../node_modules/@reach/utils/compose-event-handlers/dist/reach-utils-compose-event-handlers.esm.js","components/Disclosure/Disclosure.tsx","screens/Moves/Moves.tsx"],"names":["module","exports","AgGrid","props","gridOptions","columns","height","width","containerClassName","className","styles","grid","cx","style","maxWidth","map","item","i","createNamedContext","name","defaultValue","createContext","_arrayLikeToArray","arr","len","length","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","Object","prototype","toString","call","slice","constructor","from","test","_unsupportedIterableToArray","done","value","TypeError","next","bind","assignRef","ref","isFunction","current","error","Error","canUseDOM","window","document","createElement","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","serverHandoffComplete","id","genId","_extends","assign","target","arguments","source","key","hasOwnProperty","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","DisclosureStates","_excluded","_excluded2","_excluded3","DisclosureContext","Disclosure","_ref","children","_ref$defaultOpen","defaultOpen","onChange","openProp","open","wasControlled","isControlled","useRef","idFromProps","initialId","_React$useState","useState","setId","String","undefined","useId","panelId","_len","args","_key","filter","val","join","makeId","setOpen","context","disclosureId","onSelect","Provider","DisclosureButton","forwardRef","_ref2","forwardedRef","_ref2$as","as","Comp","onClick","onMouseDown","onPointerDown","theirHandler","ourHandler","_React$useContext","useContext","ownRef","refs","useCallback","node","_step","_iterator","useComposedRefs","Open","Collapsed","event","preventDefault","focus","defaultPrevented","DisclosurePanel","_ref3","_ref3$as","_React$useContext2","hidden","DescriptionDisclosure","description","button","Moves","history","useHistory","currentName","useParams","currentMove","MovesList","find","enum","innerWidth","moveContainer","select","e","NewName","steps","push","items","x","field","cellStyle","autoHeight","rowData"],"mappings":"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","file":"static/js/4.845ad952.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"moveContainer\":\"style_moveContainer__ICRKg\"};","import * as React from \"react\";\nimport cx from \"classcat\";\nimport {\n  AgGridColumn,\n  AgGridReact,\n  AgGridReactProps,\n  AgGridColumnGroupProps,\n  AgGridColumnProps,\n} from \"ag-grid-react\";\nimport styles from \"./AgGrid.module.css\";\n// ag stylings\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n// ag stylings\nexport const AgGrid = (props: {\n  gridOptions?: AgGridReactProps[\"gridOptions\"];\n  columns: AgGridColumnProps[];\n  height?: number | string;\n  width?: number | string;\n  containerClassName?: string;\n}) => {\n  const { gridOptions, columns, height, width, containerClassName } = props;\n\n  return (\n    <div className={styles.grid}>\n      <div\n        className={cx([\"ag-theme-alpine\", containerClassName])}\n        style={{ height: height, maxWidth: width }}\n      >\n        <AgGridReact {...gridOptions}>\n          {columns.map((item, i) => (\n            <AgGridColumn key={i} {...item} />\n          ))}\n        </AgGridReact>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"AgGrid_grid__11L6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"style_description__2VDHW\"};","import { createContext } from 'react';\n\nfunction createNamedContext(name, defaultValue) {\n  var Ctx = /*#__PURE__*/createContext(defaultValue);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    Ctx.displayName = name;\n  }\n\n  return Ctx;\n}\n\nexport { createNamedContext };\n","import { useCallback } from 'react';\nimport { isFunction } from '../../type-check/dist/reach-utils-type-check.esm.js';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\n/**\n * Passes or assigns an arbitrary value to a ref function or object.\n *\n * @param ref\n * @param value\n */\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(\"Cannot assign value \\\"\" + value + \"\\\" to ref \\\"\" + ref + \"\\\"\");\n    }\n  }\n}\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\n\nfunction useComposedRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return useCallback(function (node) {\n    for (var _iterator = _createForOfIteratorHelperLoose(refs), _step; !(_step = _iterator()).done;) {\n      var ref = _step.value;\n      assignRef(ref, node);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, refs);\n}\n\nexport { assignRef, useComposedRefs };\n","/**\n * Checks whether or not a value is a boolean.\n *\n * @param value\n */\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n/**\n * Checks whether or not a value is a function.\n *\n * @param value\n */\n\nfunction isFunction(value) {\n  // eslint-disable-next-line eqeqeq\n  return !!(value && {}.toString.call(value) == \"[object Function]\");\n}\n/**\n * Checks whether or not a value is a number.\n *\n * @param value\n */\n\nfunction isNumber(value) {\n  return typeof value === \"number\" && !isNaN(value);\n}\n/**\n * Checks whether or not a value is a string.\n *\n * @param value\n */\n\nfunction isString(value) {\n  return typeof value === \"string\";\n}\n\nexport { isBoolean, isFunction, isNumber, isString };\n","function canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\n\nexport { canUseDOM };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { canUseDOM } from '../../can-use-dom/dist/reach-utils-can-use-dom.esm.js';\n\n/**\n * React currently throws a warning when using useLayoutEffect on the server. To\n * get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also\n * need affected components to render on the server. One example is when setting\n * a component's descendants to retrieve their index values.\n *\n * Important to note that using this hook as an escape hatch will break the\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\n * any server/client mismatch.\n *\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\n * likely that the component in question shouldn't be rendered on the server at\n * all, so a better approach would be to lazily render those in a parent\n * component after client-side hydration.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n *\n * @param effect\n * @param deps\n */\n\nvar useIsomorphicLayoutEffect = /*#__PURE__*/canUseDOM() ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useState, useEffect } from 'react';\nimport { useIsomorphicLayoutEffect } from '@reach/utils/use-isomorphic-layout-effect';\n\n/*\n * Welcome to @reach/auto-id!\n\n * Let's see if we can make sense of why this hook exists and its\n * implementation.\n *\n * Some background:\n *   1. Accessibility APIs rely heavily on element IDs\n *   2. Requiring developers to put IDs on every element in Reach UI is both\n *      cumbersome and error-prone\n *   3. With a component model, we can generate IDs for them!\n *\n * Solution 1: Generate random IDs.\n *\n * This works great as long as you don't server render your app. When React (in\n * the client) tries to reuse the markup from the server, the IDs won't match\n * and React will then recreate the entire DOM tree.\n *\n * Solution 2: Increment an integer\n *\n * This sounds great. Since we're rendering the exact same tree on the server\n * and client, we can increment a counter and get a deterministic result between\n * client and server. Also, JS integers can go up to nine-quadrillion. I'm\n * pretty sure the tab will be closed before an app never needs\n * 10 quadrillion IDs!\n *\n * Problem solved, right?\n *\n * Ah, but there's a catch! React's concurrent rendering makes this approach\n * non-deterministic. While the client and server will end up with the same\n * elements in the end, depending on suspense boundaries (and possibly some user\n * input during the initial render) the incrementing integers won't always match\n * up.\n *\n * Solution 3: Don't use IDs at all on the server; patch after first render.\n *\n * What we've done here is solution 2 with some tricks. With this approach, the\n * ID returned is an empty string on the first render. This way the server and\n * client have the same markup no matter how wild the concurrent rendering may\n * have gotten.\n *\n * After the render, we patch up the components with an incremented ID. This\n * causes a double render on any components with `useId`. Shouldn't be a problem\n * since the components using this hook should be small, and we're only updating\n * the ID attribute on the DOM, nothing big is happening.\n *\n * It doesn't have to be an incremented number, though--we could do generate\n * random strings instead, but incrementing a number is probably the cheapest\n * thing we can do.\n *\n * Additionally, we only do this patchup on the very first client render ever.\n * Any calls to `useId` that happen dynamically in the client will be\n * populated immediately with a value. So, we only get the double render after\n * server hydration and never again, SO BACK OFF ALRIGHT?\n */\nvar serverHandoffComplete = false;\nvar id = 0;\n\nvar genId = function genId() {\n  return ++id;\n};\n/**\n * useId\n *\n * Autogenerate IDs to facilitate WAI-ARIA and server rendering.\n *\n * Note: The returned ID will initially be `null` and will update after a\n * component mounts. Users may need to supply their own ID if they need\n * consistent values for SSR.\n *\n * @see Docs https://reach.tech/auto-id\n */\n\n\nfunction useId(idFromProps) {\n  /*\n   * If this instance isn't part of the initial render, we don't have to do the\n   * double render/patch-up dance. We can just generate the ID and return it.\n   */\n  var initialId = idFromProps || (serverHandoffComplete ? genId() : null);\n\n  var _React$useState = useState(initialId),\n      id = _React$useState[0],\n      setId = _React$useState[1];\n\n  useIsomorphicLayoutEffect(function () {\n    if (id === null) {\n      /*\n       * Patch the ID after render. We do this in `useLayoutEffect` to avoid any\n       * rendering flicker, though it'll make the first render slower (unlikely\n       * to matter, but you're welcome to measure your app and let us know if\n       * it's a problem).\n       */\n      setId(genId());\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(function () {\n    if (serverHandoffComplete === false) {\n      /*\n       * Flag all future uses of `useId` to skip the update dance. This is in\n       * `useEffect` because it goes after `useLayoutEffect`, ensuring we don't\n       * accidentally bail out of the patch-up dance prematurely.\n       */\n      serverHandoffComplete = true;\n    }\n  }, []);\n  return id != null ? String(id) : undefined;\n}\n\nexport { useId };\n","import { useRef, useState, createElement, forwardRef, useContext, useMemo } from 'react';\nimport { createNamedContext } from '@reach/utils/context';\nimport { makeId } from '@reach/utils/make-id';\nimport { useComposedRefs } from '@reach/utils/compose-refs';\nimport { composeEventHandlers } from '@reach/utils/compose-event-handlers';\nimport { useId } from '@reach/auto-id';\nimport warning from 'tiny-warning';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"children\", \"defaultOpen\", \"onChange\", \"open\"],\n    _excluded2 = [\"as\", \"children\", \"onClick\", \"onMouseDown\", \"onPointerDown\"],\n    _excluded3 = [\"as\", \"children\"];\nvar DisclosureContext = /*#__PURE__*/createNamedContext(\"DisclosureContext\", {}); ////////////////////////////////////////////////////////////////////////////////\n\nvar DisclosureStates; ////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Disclosure\n *\n * The wrapper component and context provider for a disclosure's button and\n * panel components. A disclosure should only have one button and one panel\n * descendant.\n *\n * @see Docs https://reach.tech/disclosure#disclosure-1\n *\n * @param props\n */\n\n(function (DisclosureStates) {\n  DisclosureStates[\"Open\"] = \"open\";\n  DisclosureStates[\"Collapsed\"] = \"collapsed\";\n})(DisclosureStates || (DisclosureStates = {}));\n\nvar Disclosure = function Disclosure(_ref) {\n  var children = _ref.children,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,\n      onChange = _ref.onChange,\n      openProp = _ref.open,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  /*\n   * You shouldn't switch between controlled/uncontrolled. We'll check for a\n   * controlled component and track any changes in a ref to show a warning.\n   */\n  var wasControlled = openProp != null;\n\n  var _React$useRef = useRef(wasControlled),\n      isControlled = _React$useRef.current;\n\n  var id = useId(props.id != null ? String(props.id) : undefined) || \"disclosure\";\n  var panelId = makeId(\"panel\", id);\n\n  var _React$useState = useState(isControlled ? openProp : defaultOpen),\n      open = _React$useState[0],\n      setOpen = _React$useState[1];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(!(isControlled && !wasControlled || !isControlled && wasControlled), \"Disclosure is changing from controlled to uncontrolled. Disclosure should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Disclosure for the lifetime of the component. Check the `open` prop being passed in.\") : void 0;\n  }\n\n  function onSelect() {\n    onChange == null ? void 0 : onChange();\n\n    if (!isControlled) {\n      setOpen(function (open) {\n        return !open;\n      });\n    }\n  }\n\n  var context = {\n    disclosureId: id,\n    onSelect: onSelect,\n    open: open,\n    panelId: panelId\n  };\n\n  if (isControlled && openProp !== open) {\n    /*\n     * If the component is controlled, we'll sync internal state with the\n     * controlled state\n     */\n    setOpen(openProp);\n  }\n\n  return /*#__PURE__*/createElement(DisclosureContext.Provider, {\n    value: context\n  }, children);\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  Disclosure.displayName = \"Disclosure\";\n  Disclosure.propTypes = {\n    children: PropTypes.node.isRequired,\n    defaultOpen: PropTypes.bool,\n    onChange: PropTypes.func,\n    open: PropTypes.bool\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\n * DisclosureButton\n *\n * The trigger button a user clicks to interact with a disclosure.\n *\n * @see Docs https://reach.tech/disclosure#disclosurebutton\n */\n\n\nvar DisclosureButton = /*#__PURE__*/forwardRef(function DisclosureButton(_ref2, forwardedRef) {\n  var _ref2$as = _ref2.as,\n      Comp = _ref2$as === void 0 ? \"button\" : _ref2$as,\n      children = _ref2.children,\n      onClick = _ref2.onClick;\n      _ref2.onMouseDown;\n      _ref2.onPointerDown;\n      var props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  var _React$useContext = useContext(DisclosureContext),\n      onSelect = _React$useContext.onSelect,\n      open = _React$useContext.open,\n      panelId = _React$useContext.panelId;\n\n  var ownRef = useRef(null);\n  var ref = useComposedRefs(forwardedRef, ownRef);\n\n  function handleClick(event) {\n    event.preventDefault();\n    ownRef.current && ownRef.current.focus();\n    onSelect();\n  }\n\n  return /*#__PURE__*/createElement(Comp // Optionally, the element with role `button` has a value specified for\n  // `aria-controls` that refers to the element that contains all the\n  // content that is shown or hidden.\n  // https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\n  , _extends({\n    \"aria-controls\": panelId // When the content is visible, the element with role `button` has\n    // `aria-expanded` set to `true`. When the content area is hidden, it is\n    // set to `false`.\n    // https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\n    ,\n    \"aria-expanded\": open\n  }, props, {\n    \"data-reach-disclosure-button\": \"\",\n    \"data-state\": open ? DisclosureStates.Open : DisclosureStates.Collapsed,\n    ref: ref,\n    onClick: composeEventHandlers(onClick, handleClick)\n  }), children);\n});\n/**\n * @see Docs https://reach.tech/disclosure#disclosurebutton-props\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  DisclosureButton.displayName = \"DisclosureButton\";\n  DisclosureButton.propTypes = {\n    as: PropTypes.any,\n    children: PropTypes.node\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\n * DisclosurePanel\n *\n * The collapsible panel in which inner content for an disclosure item is\n * rendered.\n *\n * @see Docs https://reach.tech/disclosure#disclosurepanel\n */\n\n\nvar DisclosurePanel = /*#__PURE__*/forwardRef(function DisclosurePanel(_ref3, forwardedRef) {\n  var _ref3$as = _ref3.as,\n      Comp = _ref3$as === void 0 ? \"div\" : _ref3$as,\n      children = _ref3.children,\n      props = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n\n  var _React$useContext2 = useContext(DisclosureContext),\n      panelId = _React$useContext2.panelId,\n      open = _React$useContext2.open;\n\n  return /*#__PURE__*/createElement(Comp, _extends({\n    ref: forwardedRef,\n    hidden: !open\n  }, props, {\n    \"data-reach-disclosure-panel\": \"\",\n    \"data-state\": open ? DisclosureStates.Open : DisclosureStates.Collapsed,\n    id: panelId\n  }), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  DisclosurePanel.displayName = \"DisclosurePanel\";\n  DisclosurePanel.propTypes = {};\n}\n/**\n * @see Docs https://reach.tech/disclosure#disclosurepanel-props\n */\n\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hook that exposes data for a given `Disclosure` component to its\n * descendants.\n *\n * @see Docs https://reach.tech/disclosure#usedisclosurecontext\n */\nfunction useDisclosureContext() {\n  var _React$useContext3 = useContext(DisclosureContext),\n      open = _React$useContext3.open,\n      panelId = _React$useContext3.panelId,\n      disclosureId = _React$useContext3.disclosureId;\n\n  return useMemo(function () {\n    return {\n      id: disclosureId,\n      panelId: panelId,\n      open: open\n    };\n  }, [disclosureId, open, panelId]);\n} ////////////////////////////////////////////////////////////////////////////////\n\nexport { Disclosure, DisclosureButton, DisclosurePanel, DisclosureStates, useDisclosureContext };\n","/**\n * Joins strings to format IDs for compound components.\n *\n * @param args\n */\nfunction makeId() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.filter(function (val) {\n    return val != null;\n  }).join(\"--\");\n}\n\nexport { makeId };\n","/**\n * Wraps a lib-defined event handler and a user-defined event handler, returning\n * a single handler that allows a user to prevent lib-defined handlers from\n * firing.\n *\n * @param theirHandler User-supplied event handler\n * @param ourHandler Library-supplied event handler\n */\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return function (event) {\n    theirHandler && theirHandler(event);\n\n    if (!event.defaultPrevented) {\n      return ourHandler(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n","import * as React from \"react\";\nimport styles from \"./style.module.css\";\nimport {\n  Disclosure,\n  DisclosureButton,\n  DisclosurePanel,\n} from \"@reach/disclosure\";\n\nexport function DescriptionDisclosure(props: { children?: any; button: any }) {\n  return (\n    <div className={styles.description}>\n      <Disclosure>\n        <DisclosureButton>{props.button}</DisclosureButton>{\" \"}\n        <DisclosurePanel>{props.children}</DisclosurePanel>{\" \"}\n      </Disclosure>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport styles from \"./style.module.css\";\nimport { AgGrid } from \"../../components/AgGrid/AgGrid\";\nimport MovesList from \"./List.json\";\nimport { useParams, useHistory } from \"react-router\";\nimport { DescriptionDisclosure } from \"../../components/Disclosure/Disclosure\";\n\nexport default function Moves() {\n  const history = useHistory();\n  const params = useParams<{ name: string }>();\n  let currentName = params.name;\n  let currentMove = MovesList.find((item: any) => {\n    return item.enum === currentName;\n  });\n\n  return (\n    <div\n      style={{ maxWidth: window.innerWidth }}\n      className={styles.moveContainer}\n    >\n      <h2 className={styles.select}>{currentMove?.name ?? \"Choose a Move\"}</h2>\n      <select\n        style={{ maxWidth: window.innerWidth }}\n        onChange={(e) => {\n          let NewName: any =\n            MovesList.find((item) => {\n              return item.name === e.target.value;\n            }) === undefined\n              ? { enum: \"\", name: \"\", description: \"\", steps: [] }\n              : MovesList.find((item) => {\n                  return item.name === e.target.value;\n                });\n          if (NewName.enum !== undefined) {\n            history.push(`/moves/beginner/${NewName.enum}`);\n          }\n        }}\n      >\n        <option>Choose a Move</option>\n        {MovesList.map((items: any, x) => {\n          return <option key={x}>{items.name}</option>;\n        })}\n      </select>\n      <AgGrid\n        columns={[\n          {\n            field: \"step\",\n            cellStyle: { \"white-space\": \"normal\" },\n            autoHeight: true,\n          },\n          {\n            field: \"count\",\n            cellStyle: { \"white-space\": \"normal\" },\n            autoHeight: true,\n          },\n          {\n            field: \"count\",\n            cellStyle: { \"white-space\": \"normal\" },\n            autoHeight: true,\n          },\n          {\n            field: \"footMovement\",\n            width: 300,\n            cellStyle: { \"white-space\": \"normal\" },\n            autoHeight: true,\n          },\n          {\n            field: \"amountOfTurn\",\n            cellStyle: { \"white-space\": \"normal\" },\n            autoHeight: true,\n          },\n          {\n            field: \"lead\",\n            width: 300,\n            cellStyle: { \"white-space\": \"normal\" },\n            autoHeight: true,\n          },\n        ]}\n        height={600}\n        width={window.innerWidth}\n        gridOptions={{ rowData: currentMove?.steps ?? [] }}\n      />\n      <DescriptionDisclosure\n        button={\"Description\"}\n        children={<p>{currentMove?.description}</p>}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}